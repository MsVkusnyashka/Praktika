//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Praktika.Models
{
    using System;
    using System.Collections.Generic;
    using System.Windows.Media;

    public partial class Tour
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Tour()
        {
            this.Hotel = new HashSet<Hotel>();
            this.Type = new HashSet<Type>();
        }
    
        public int Id { get; set; }
        public int TicketCount { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public byte[] ImagePreview { get; set; }
        public decimal Price { get; set; }
        public bool IsActual { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Hotel> Hotel { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Type> Type { get; set; }

        /// <summary>
        /// /// Свойство для хранения пути до изображения тура в ресурсах проекта
        /// </summary>
        public string ImgPath
        {
            get
            {
                return "/Туры фото/" + this.Name + ".jpg";
            }
        }
        /// <summary>
        /// Свойство для хранения статуса тура в строковом представлении
        /// </summary>
        public string State
        {
            get
            {
                return IsActual ? "Актуален" : "Не актуален";
            }
        }
        /// <summary>
        /// Свойство для выделения статуса тура цветом (актуальный - зеленым, а не актуальный - красный)
        /// </summary>
        public SolidColorBrush solidColorBrush
        {
            get
            {
                return IsActual ? Brushes.Green : Brushes.Red;
            }
        }
        /// <summary>
        /// Свойство для вывода стоимости тура в формате "ЧИСЛО + рублей "
        /// </summary>
        public string FullViewPrice
        {
            get
            {
                return (int)this.Price + " рублей";
            }
        }
        /// <summary>
        /// Свойство для вывода количества билетов в формате "Количество билетов + ЧИСЛО"
        /// </summary>
        public string FullTicketCount
        {
            get
            {
                return "Количество билетов: " + this.TicketCount;
            }
        }
    }
}
